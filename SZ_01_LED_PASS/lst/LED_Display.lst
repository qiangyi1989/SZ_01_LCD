C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LED_DISPLAY
OBJECT MODULE PLACED IN .\out\LED_Display.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE LED_Display.c BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\LED
                    -_Display.lst) OBJECT(.\out\LED_Display.obj)

line level    source

   1          /**
   2           * Copyright (c) 2012, 长沙晗光电子科技有限公司
   3           * All rights reserved.
   4           *
   5           * FILE:   LED_Display.c
   6           * LED显示程序
   7           *
   8           * @file LED_Display.h led_driver.h
   9           * 头文件.
  10           *
  11           * @author JWD
  12           * @date 2012-12-21
  13           *
  14           */
  15          #include "eeprom.h"
  16          #include "LED_Display.h"
  17          #include "I2c.h"
  18          #include "reg51.h"
  19          #include "save_cnt.h"
  20          #include "global.h"
  21          #include "sys.h"
  22          
  23          #ifdef DISP_C
  24          
  25          #define BELL P25
  26          
  27          #define MAIN_ADJ_DELAY 2000
  28          #define KEY_DOU_DELY 50
  29          #define KEY_LONG_DELY 100
  30          #define BELL_ON_DELY 50
  31          #define LONG_KEY_STEP_SWITCH 50
  32          #define DISP_ERR_TIMER 1000 //延时数据修改失败时间 和 错误显示时间
  33          
  34          //#define NO_KEY_RETURN_MAIN 15000 //00000菜单无按键返回主页面延时
  35          #define NO_KEY_RETURN_MAIN 30000 //00000菜单无按键返回主页面延时
  36          
  37          #define TEST_MODE_CNT    40
  38          //#define LEARN_MODE_CNT   20
  39          #define LEARN_MODE_CNT   30
  40          
  41          
  42          extern char eeprom_en;
  43          extern xdata unsigned int disp_buf[5];
  44          
  45          /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  46           |                                函数声明                                    |
  47          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
  48          //void InitLEDDrivers(void);
  49          void LEDShowFlashString(const char  * buff,char x);
  50          //void LEDShowString(char  * buff,char x);
  51          void LEDShowCharS(const char * buff,char num,char x);
  52          void LEDClearChar(char x,char n);
  53          void LEDClearCharS(char num,char x);
  54          void LED_ShowNumber(char * buff,char x);
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 2   

  55          //void LED_ShowData(char * buff,char x,char nPoint);
  56          
  57          static char DataToStr(void * const pData,char size,char nBit,char nPoint,char *string,char nFlag,char nTyp
             -e);
  58          static long StrToData(char *string,char len,char nType);
  59          
  60          //extern void ResetDoorForTest();
  61          
  62          
  63          //sbit P17 = P1^7;
  64          //sbit P37 = P3^7;
  65          sbit P25 = P2^5;
  66          //sbit P21 = P2^1;
  67          //sbit P22 = P2^2;
  68          sbit P14 = P1^4;
  69          
  70          //#define RED P17
  71          //#define YELLOW P54
  72          //#define BLUE P55
  73          
  74          
  75          
  76          
  77          //char xdata DIS_OPTIONING;                                                                                     ///<【不允许插引工作标志。0：允许插引；1：不允许插引】
  78          char xdata DIS_ERR_FLGA = 0;
  79          
  80          //内部变量定义
  81          //static xdata unsigned int  l_state;                                                           //显示画面状态
  82          
  83          //static xdata unsigned long  l_input_value;                                            //参数修改画面输入值
  84          static xdata char  l_stop_poll;                                                                 //停止循环显示
  85          
  86          //static xdata char DisplayStateOld;                                                            //记忆画面状态
  87          
  88          static xdata char  DisplayMainID;                                                                       //主画面序号
  89          static xdata char  DisplayMenuID;                                                                       //菜单画面序号
  90          
  91          static xdata char  DisplayMainTotal;                                                            //主画面总数
  92          static xdata char  MenuTotals;                                                                  //主菜单画面总数
  93          
  94          
  95          static xdata char  DisplayMenuTotal;                                                            //菜单画面总数
  96          
  97          static xdata char  DisplayItemNum;                                                              //显示项目序号
  98          static xdata char  DisplayBitNum;                                                                       //显示位号
  99          
 100          //static xdata char  MenuUpdateState;                                                           //菜单显示更新状态
 101          static xdata char  PasswordBuff[5];                                                             //密码数据缓冲区
 102          static xdata char  DisplayBuff[10];
 103          
 104          int  DisplayState;                                                                                      //画面状态
 105          
 106          
 107          static xdata const MAIN_SHOW * pMain;                                                           //主画面数据指针
 108          static xdata const MENU_SHOW * pMenu;                                                           //菜单指针
 109          static xdata const MENU_ITEM * pItem;                                                           //菜单项目指针
 110          
 111          //static xdata const MENU_SHOW * pCode;
 112          static xdata const MENU_SHOW * pDataValue;
 113          
 114          //static xdata const TYPE_CODE * disp_code;
 115          
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 3   

 116          //static xdata char  UpdateDataCount;
 117          static xdata char  CycShowCount;
 118          static xdata char  InputDataLen;
 119          static xdata long  TempInputData;
 120          static xdata char  DataType;
 121          
 122          
 123          xdata public_stru public_val;
 124          xdata MENU_CHANG now_menu;
 125          
 126          xdata char cPauseBell = 0; 
 127          
 128          xdata char test_mode = 0;   /* 测试模式标志: 0正常工作模式，1测试模式 */
 129          
 130          
 131          xdata char uart_send_buf[100];
 132          
 133          
 134          //菜单配置界面
 135          //参数组定义
 136          //#define DEBUG_MENU_GS_VAL 30
 137          //#define USE_MENU_NUM 16
 138          
 139          static xdata MENU_SHOW Menu00000[MENU_ID_00000_MAX_ITEM];
 140          static xdata MENU_SHOW Menu10101[MENU_ID_10101_MAX_ITEM];
 141          static xdata MENU_SHOW Menu10102[MENU_ID_10102_MAX_ITEM];
 142          static xdata MENU_SHOW Menu10103[MENU_ID_10103_MAX_ITEM];
 143          static xdata MENU_SHOW Menu10104[MENU_ID_10104_MAX_ITEM];
 144          static xdata MENU_SHOW Menu20101[MENU_ID_20101_MAX_ITEM];
 145          
 146          xdata char Menu_Number[MENU_NUM] = {MENU_ID_00000_MAX_ITEM,
 147                                                                                  MENU_ID_10101_MAX_ITEM,
 148                                                                                  MENU_ID_10102_MAX_ITEM,
 149                                                                                  MENU_ID_10104_MAX_ITEM,
 150                                                                                  MENU_ID_20101_MAX_ITEM
 151                  };
 152          //xdata char Menu0_Number = 10, Menu1_Number = 20;
 153          
 154          /*--------------菜单设置画面 数据配置-------------*/
 155          code MENU_ITEM MenuItem[]={
 156            //菜单序号,菜单地址,密码 数据存储首地址 最大数据个数
 157                  {MENU_ID_00000,Menu00000,"00000",EEPROM_MENU_1,MENU_ID_00000_MAX_ITEM,0,&Menu_Number[0]}, 
 158                  {MENU_ID_10101,Menu10101,"10101",EEPROM_MENU_2,MENU_ID_10101_MAX_ITEM,0,&Menu_Number[2]}, 
 159                  {MENU_ID_10102,Menu10102,"10102",EEPROM_MENU_3,MENU_ID_10102_MAX_ITEM,0,&Menu_Number[3]}, 
 160                  {MENU_ID_10103,Menu10103,"10103",EEPROM_MENU_4,MENU_ID_10103_MAX_ITEM,0,&Menu_Number[4]}, 
 161                  {MENU_ID_10104,Menu10104,"10104",EEPROM_MENU_5,MENU_ID_10104_MAX_ITEM,0,&Menu_Number[5]}, 
 162                  {MENU_ID_20101,Menu20101,"20101",EEPROM_MENU_6,MENU_ID_20101_MAX_ITEM,0,&Menu_Number[6]}, 
 163                  {0,0,0}
 164          };
 165          
 166          code MAIN_SHOW MainItem[]={
 167              //显示的字符串,数据显示类型,数据地址,函数名
 168              {"",TY_D_A,0,&(public_val.main_disp_val),INT32_SIZE,5,0,99999,0},           
 169              {0,0,0}
 170          };
 171          
 172          /*-------------------------主画面数据配置,全局变量----------------------------*/
 173          xdata const MAIN_PIC main_menu_cfg[]={
 174              {4,2,MainItem,MenuItem},
 175          };
 176          
 177          static code const char LED_ASCII[128]={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //0x0
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 4   

 178                                                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 179                                                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //0x1
 180                                                      0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, 
 181                                                      0x00,0xFE,0xB0,0xED,0xF9,0xB3,0xDB,0xDF, //0x2
 182                                                      0xF0,0xFF,0xFB,0x00,0x00,0x40,0x80,0x00, 
 183                                                      0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07, // 起始48:0-7
 184                                                      0x7f,0x6F,0x77,0x1F,0x4E,0x3D,0x4F,0x47, //     56
 185                                                      0xFB,0x77,0x1F,0x4E,0x3D,0x79,0x71,0xFB, //     64
 186                                                      0x37,0x06,0x0E,0x07,0x38,0x6A,0x76,0x1D, //     72
 187                                                      0x73,0x67,0x05,0x5B,0x31,0x3E,0x1C,0x5C, //     80
 188                                                      0x31,0x3B,0xED,0x00,0x00,0x00,0x62,0x08,
 189                                                      0x00,0x77,0x1F,0x4E,0x3D,0x4F,0x47,0xFB, //0x6
 190                                                      0x37,0x06,0x38,0x07,0x0E,0x6A,0x15,0x1D, 
 191                                                      0x67,0x73,0x50,0x5B,0x78,0x3E,0x1C,0x5C, //0x7
 192                                                      0x31,0x3B,0xED,0x00,0x00,0x00,0x00,0x00, 
 193                                     };
 194          
 195          //unsigned short usParamNum = 30;   /* 主板的配置参数个数，最大为30个 */
 196          
 197          xdata int gsKeyVal = 0;    /* 按键值 */
 198          xdata char gcKeyType = 0;  /* 按键类型: 0短按, 1长按下，2长按抬起 */
 199          
 200          //xdata char gcKeyLongUpFlag = 0;    /* 长按抬起标志:0未抬起，1抬起 */
 201          //xdata char gcKeyLongDownFlag = 0;  /* 长按按下标志:0未按下，1按下 */
 202          
 203          xdata _U_BIT_PARAM unKey;
 204           
 205          
 206          xdata char speed_mode = 1;   //速度模式: 1高速， 0低速
 207          
 208          xdata char qz_wait = 0;      //等待切纸确认: 0未等待，1等待
 209          
 210          /*++++++++++++++++++++++++++++++++++++++++++++++++
 211          功能：显示字符串。
 212          
 213          参数：buff:欲发送的数据缓冲区；x:坐标
 214          
 215          返回值：无。
 216          
 217          说明：
 218          ++++++++++++++++++++++++++++++++++++++++++++++++*/
 219          void  LEDShowFlashString(const char  * buff,char x) 
 220          {
 221   1              do
 222   1              {
 223   2                      disp_buf[x++] = LED_ASCII[*buff++];
 224   2              }while(x<6 && *buff!=0);
 225   1      }
 226          
 227          void  LEDShowCaption(char num) 
 228          {
 229   1      char *buff,x = 0;
 230   1      switch(num)
 231   1              {
 232   2                      case 0:
 233   2                              buff = "1-";
 234   2                      break;
 235   2                      case 1:
 236   2                              buff = "2-";
 237   2                      break;          
 238   2                      case 2:
 239   2                              buff = "3-";
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 5   

 240   2                      break;  
 241   2                      case 3:
 242   2                              buff = "4-";
 243   2                      break;          
 244   2                      case 4:
 245   2                              buff = "5-";
 246   2                      break;          
 247   2                      case 5:
 248   2                              buff = "6-";
 249   2                      break;          
 250   2                      case 6:
 251   2                              buff = "7-";
 252   2                      break;          
 253   2                      case 7:
 254   2                              buff = "8-";
 255   2                      break;          
 256   2                      case 8:
 257   2                              buff = "9-";
 258   2                      break;          
 259   2                      case 9:
 260   2                              buff = "10";
 261   2                      break;          
 262   2                      case 10:
 263   2                              buff = "11";
 264   2                      break;          
 265   2                      case 11:
 266   2                              buff = "12";
 267   2                      break;          
 268   2                      case 12:
 269   2                              buff = "13";
 270   2                      break;  
 271   2                      case 13:
 272   2                              buff = "14";
 273   2                      break;  
 274   2                      case 14:
 275   2                              buff = "15";
 276   2                      break;  
 277   2                      case 15:
 278   2                              buff = "16";
 279   2                      break;  
 280   2                      case 16:
 281   2                              buff = "17";
 282   2                      break;
 283   2                      case 17:
 284   2                              buff = "18";
 285   2                      break;  
 286   2                      case 18:
 287   2                              buff = "19";
 288   2                      break;  
 289   2                      case 19:
 290   2                              buff = "20";
 291   2                      break;                  
 292   2                      case 20:
 293   2                              buff = "21";
 294   2                      break;          
 295   2                      case 21:
 296   2                              buff = "22";
 297   2                      break;          
 298   2                      case 22:
 299   2                              buff = "23";
 300   2                      break;  
 301   2                      case 23:
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 6   

 302   2                              buff = "24";
 303   2                      break;  
 304   2                      case 24:
 305   2                              buff = "25";
 306   2                      break;  
 307   2                      case 25:
 308   2                              buff = "26";
 309   2                      break;  
 310   2                      case 26:
 311   2                              buff = "27";
 312   2                      break;
 313   2                      case 27:
 314   2                              buff = "28";
 315   2                      break;  
 316   2                      case 28:
 317   2                              buff = "29";
 318   2                      break;  
 319   2                      case 29:
 320   2                              buff = "30";
 321   2                      break;  
 322   2                      case 80:
 323   2                              buff = "   A1";
 324   2                      break;
 325   2                      case 81:
 326   2                              buff = "   A2";
 327   2                      break;
 328   2                      case 82:
 329   2                              buff = "   A3";
 330   2                      break;
 331   2                      case 83:
 332   2                              buff = "   A4";
 333   2                      break;
 334   2                      case 84:
 335   2                              buff = "   A5";
 336   2                      break;
 337   2                      case 85:
 338   2                              buff = "   A6";
 339   2                      break;
 340   2                      case 86:
 341   2                              buff = "   A7";
 342   2                      break;
 343   2                      case 87:
 344   2                              buff = "   A8";
 345   2                      break;
 346   2                      case 88:
 347   2                              buff = "   A9";
 348   2                      break;
 349   2                      case 89:
 350   2                              buff = "  A10";
 351   2                      break;
 352   2              }
 353   1              do
 354   1              {
 355   2                      disp_buf[x++] = LED_ASCII[*buff++];
 356   2              }while(x<6 && *buff!=0);
 357   1      }
 358          
 359          /*++++++++++++++++++++++++++++++++++++++++++++++++
 360          功能：显示字符串。
 361          
 362          参数：buff:欲发送的数据缓冲区；x:坐标
 363          
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 7   

 364          返回值：无。
 365          
 366          说明：
 367          ++++++++++++++++++++++++++++++++++++++++++++++++*/
 368          /*void  LEDShowString(char  * buff,char x) 
 369          {
 370                  do
 371                  {
 372                          disp_buf[x++] = LED_ASCII[*buff++];
 373                  
 374                  }while(x<6 && *buff!=0);
 375          }*/
 376          
 377          /*void  LED_ShowData(char * buff,char x,char nPoint)
 378          {
 379              do
 380                  {
 381                  if(nPoint !=0 && (8-nPoint)==x)
 382                          disp_buf[x++] = LED_ASCII[*buff++] | 0x80;              ///<【位7置1】
 383                          else
 384                                  disp_buf[x++] = LED_ASCII[*buff++];
 385                  }while(x<6 && *buff!=0);
 386          }*/
 387          
 388          /*++++++++++++++++++++++++++++++++++++++++++++++++
 389          功能：清除指定行号列号的字符。
 390          
 391          参数：x:坐标1-8。
 392          
 393          返回值：无。
 394          
 395          说明： 无。
 396          ++++++++++++++++++++++++++++++++++++++++++++++++*/
 397          void  LEDClearChar(char x,char n)
 398          {
 399   1              char i;
 400   1              for(i = x; i< (x+n); i++ )
 401   1                      {
 402   2                              disp_buf[i] = 0;                
 403   2                      }
 404   1      }
 405          
 406          
 407          /*++++++++++++++++++++++++++++++++++++++++++++++++
 408          功能：显示数字。
 409          参数：buff:欲发送的数据缓冲区；x:坐标
 410          返回值：无。
 411          说明：
 412          ++++++++++++++++++++++++++++++++++++++++++++++++*/
 413          void  LED_ShowNumber(char * buff,char x) 
 414          {
 415   1              char TempFlag=0;
 416   1              do
 417   1              {
 418   2                      if(*(buff+1)!='.' || TempFlag==1)
 419   2                      {
 420   3                              disp_buf[x++] = LED_ASCII[*buff++];
 421   3                              //SendLed(x++,LED_ASCII[*buff++]);
 422   3                      }
 423   2                      else
 424   2                      {
 425   3                              disp_buf[x++] = LED_ASCII[*buff++] | 0x80;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 8   

 426   3                              //SendLed(x++,(LED_ASCII[*buff++] | 0x80));
 427   3                              TempFlag=1;
 428   3                              buff++;
 429   3                      }
 430   2              }while(x<6);
 431   1              
 432   1      }
 433          
 434          //菜单数据指向
 435          void menu_cfg(void)
 436          {
 437   1              char i;
 438   1              for(i = 0; i < MENU_ID_00000_MAX_ITEM ; i++)
 439   1                      {
 440   2                              Menu00000[i].m_data_vale = &public_val.Disp_Dz_00000[i];
 441   2                      }
 442   1      
 443   1              for(i = 0; i < MENU_ID_10101_MAX_ITEM ; i++)
 444   1                      {
 445   2                              Menu10101[i].m_data_vale = &public_val.Disp_Dz_10101[i];
 446   2                      }
 447   1      
 448   1              for(i = 0; i < MENU_ID_10102_MAX_ITEM ; i++)
 449   1                      {
 450   2                              Menu10102[i].m_data_vale = &public_val.Disp_Dz_10102[i];
 451   2                      }
 452   1              
 453   1              for(i = 0; i < MENU_ID_10103_MAX_ITEM ; i++)
 454   1                      {
 455   2                              Menu10103[i].m_data_vale = &public_val.Disp_Dz_10103[i];
 456   2                      }
 457   1      
 458   1              for(i = 0; i < MENU_ID_10104_MAX_ITEM ; i++)
 459   1                      {
 460   2                              Menu10104[i].m_data_vale = &public_val.Disp_Dz_10104[i];
 461   2                      }
 462   1      
 463   1              for(i = 0; i < MENU_ID_20101_MAX_ITEM ; i++)
 464   1                      {
 465   2                              Menu20101[i].m_data_vale = &public_val.Disp_Dz_20101[i];
 466   2                      }
 467   1      }
 468          
 469          /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 470          名称:   read_menu_data(char menu_id)
 471          功能：  读取菜单配置数据 和 菜单数据
 472          参数：  无
 473          返回值：无
 474          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
 475          
 476          
 477          void read_menu_data(char menu_id)
 478          {
 479   1              unsigned char *progbyte,read_byte;
 480   1              unsigned int progadd;
 481   1      
 482   1              int i;
 483   1      
 484   1              progadd = MenuItem[menu_id].eeprom_cfg_add;
 485   1              read_byte = IapReadByte(progadd++);
 486   1              
 487   1              for(i = 0; i < MenuItem[menu_id].MenuItem_Max; i++)
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 9   

 488   1                      {
 489   2                              if(menu_id == MENU_ID_10104)
 490   2                                      MenuItem[menu_id].m_pcfg[i].m_max = 450;
 491   2                              else
 492   2                                      MenuItem[menu_id].m_pcfg[i].m_max = 999;
 493   2                              MenuItem[menu_id].m_pcfg[i].m_min = 0;
 494   2                              MenuItem[menu_id].m_pcfg[i].ext_property = 0; //read_byte;
 495   2                      }
 496   1              MenuItem[MENU_ID_10104].m_pcfg[PASS_LOCK_COUNT - 1].m_max = 500;
 497   1              
 498   1              switch(menu_id)
 499   1                      {
 500   2                              case MENU_ID_00000:
 501   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_00000[0];
 502   2                              break;                  
 503   2                              case MENU_ID_10101:
 504   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10101[0];
 505   2                              break;
 506   2                              case MENU_ID_10102:
 507   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10102[0];
 508   2                              break;
 509   2                              case MENU_ID_10103:
 510   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10103[0];
 511   2                              break;
 512   2                              case MENU_ID_10104:
 513   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10104[0];
 514   2                              break;
 515   2                              case MENU_ID_20101:
 516   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_20101[0];
 517   2                              break;
 518   2                      }
 519   1              progadd = MenuItem[menu_id].eeprom_add;
 520   1              for(i = 0; i < MenuItem[menu_id].MenuItem_Max + 1; i++)
 521   1                      {
 522   2                              *progbyte = IapReadByte(progadd++);
 523   2                              progbyte++;
 524   2                              *progbyte = IapReadByte(progadd++);
 525   2                              progbyte++;
 526   2                      }
 527   1                      
 528   1              
 529   1      }
 530          
 531          //将菜单值更新到通讯菜单值，合并两个菜单。
 532          void update_menu_to_com(void)
 533          {
 534   1              char TempB;
 535   1              for(TempB = 0; TempB < MENU_ID_00000_MAX_ITEM; TempB++)
 536   1                      {
 537   2                              public_val.menu_parm[TempB] = public_val.Disp_Dz_00000[TempB];
 538   2                      }
 539   1      
 540   1              for(TempB = 0; TempB < MENU_ID_10101_MAX_ITEM; TempB++)
 541   1                      {
 542   2                              public_val.menu_parm[TempB + MENU_ID_00000_MAX_ITEM] = public_val.Disp_Dz_10101[TempB];
 543   2                      }       
 544   1      }
 545          
 546          //读取MCU的ID号 值举例:0D 00 00 2C 02 4B E5
 547          //                                         0D 00 00 30 03 64 E4(开发板载MCU)
 548          void read_id()
 549          {
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 10  

 550   1          char code *cptr;
 551   1              char i,read_byte[7];
 552   1          cptr = ID_ADDR_ROM;         //从程序区读取ID号
 553   1          for(i=0; i<7; i++)         //读7个字节
 554   1                  {
 555   2                      read_byte[i] = *cptr++; // 0xff; // 
 556   2                  }
 557   1              public_val.password_index_disp = (int)read_byte[5];
 558   1              public_val.password_index_disp <<= 8;
 559   1              public_val.password_index_disp |= (int)read_byte[6] & 0xff;
 560   1              public_val.password_index = public_val.password_index_disp % 2000;
 561   1      
 562   1              cptr = EEPROM_PASSWORD;
 563   1              read_byte[0] = IapReadByte(EEPROM_PASSWORD + (public_val.password_index<<1));
 564   1              read_byte[1] = IapReadByte(EEPROM_PASSWORD + (public_val.password_index<<1)+1);
 565   1              public_val.password_val[0] = (int)read_byte[0] & 0xff;
 566   1              public_val.password_val[1] = (int)read_byte[1] & 0xff;
 567   1      }       
 568          
 569          /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 570          名称:   void InitLEDDisplay(void)
 571          
 572          功能：  显示初始化程序
 573          
 574          参数：  无
 575                
 576          返回值：无
 577          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
 578          void InitLEDDisplay(void)
 579          {
 580   1          char TempB;
 581   1          //unsigned int temp_int;
 582   1                      
 583   1              BELL = 0;
 584   1      
 585   1              //LEDShowFlashString("Lt-2 ",0);
 586   1              LEDShowFlashString("60409",0);    /* 显示操作板版本号 */
 587   1              
 588   1              TM1637_Write();
 589   1      
 590   1              ///【统计主界面需要显示的项数】
 591   1              pMain = main_menu_cfg[0].m_main;
 592   1              for( TempB = 0; pMain[TempB].m_str; TempB++ ) ///<【空串不为0，即不为假】
 593   1                      {
 594   2                              ;
 595   2                      }                       
 596   1              DisplayMainTotal = TempB;
 597   1      
 598   1              ///【统计下级子菜单数量】
 599   1              pItem = main_menu_cfg[0].m_menu;
 600   1              pMenu = pItem[0].m_pcfg;
 601   1              for(TempB = 0; TempB == pItem[TempB].MenuID; TempB++) 
 602   1                      {
 603   2                              read_menu_data(TempB); //读取菜单数据值;
 604   2                      }
 605   1              MenuTotals = TempB;
 606   1              update_menu_to_com();
 607   1      
 608   1              menu_cfg();
 609   1              
 610   1              
 611   1              CycShowCount = 0;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 11  

 612   1              DisplayItemNum = 0;
 613   1              DisplayState = ST_MAIN;                                                                 //进入主画面
 614   1              l_stop_poll = 0;                                                                                //默认定格显示
 615   1              
 616   1              //标志位初始化
 617   1              public_val.Work_Pause_Flag = 0; 
 618   1              public_val.Err_Flag = 0;
 619   1              public_val.Bell_Flag = 0;
 620   1      
 621   1              public_val.cnt_after_powered = 0;
 622   1              public_val.Lock_Flag = 0;
 623   1      
 624   1              //加密相关变量初始化
 625   1              read_id();
 626   1      
 627   1              public_val.Disp_Dz_10103[12] = public_val.password_val[0];
 628   1              public_val.Disp_Dz_10103[13] = public_val.password_val[1];
 629   1              
 630   1              public_val.input_pass_mask = 0;
 631   1              for(TempB = 0; TempB < PASS_LOCK_COUNT; TempB++)
 632   1                      {
 633   2                              if( (public_val.Disp_Dz_10103[TempB * 2] == 0)
 634   2                                      && (public_val.Disp_Dz_10103[TempB * 2 + 1] == 0)
 635   2                                      )
 636   2                                      {
 637   3                                              public_val.input_pass_mask |= 1 << TempB;
 638   3                                      }
 639   2                              public_val.Disp_Dz_10102[TempB * 2] = 0;
 640   2                              public_val.Disp_Dz_10102[TempB * 2 + 1] = 0;
 641   2                      }
 642   1              
 643   1              read_loack_count();
 644   1              read_user_count();
 645   1              public_val.Disp_Dz_20101[0] = public_val.work_count / LOCK_UNIT; //已生产根数赋值
 646   1              /* added by james */
 647   1          public_val.ms_timer = 0;
 648   1              public_val.io_read = 0;
 649   1      
 650   1              unKey.all = 0xFFFF;
 651   1      
 652   1      }
 653          
 654          
 655          //完成对菜单数据的存储
 656          void func_menu_update(int menu_id)
 657          {
 658   1              unsigned char *progbyte,i,readbyte;
 659   1              unsigned int progadd;
 660   1              
 661   1              eeprom_en = 0xaa;
 662   1              IapEraseSector(MenuItem[menu_id].eeprom_add);
 663   1              eeprom_en = 0;
 664   1              switch(menu_id)
 665   1                      {
 666   2                              case MENU_ID_00000:
 667   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_00000[0];
 668   2                              break;                  
 669   2                              case MENU_ID_10101:
 670   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10101[0];
 671   2                              break;
 672   2                              case MENU_ID_10102:
 673   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10102[0];
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 12  

 674   2                              break;
 675   2                              case MENU_ID_10103:
 676   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10103[0];
 677   2                              break;
 678   2                              case MENU_ID_10104:
 679   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_10104[0];
 680   2                              break;
 681   2                              case MENU_ID_20101:
 682   2                                      progbyte = (unsigned char *)&public_val.Disp_Dz_20101[0];
 683   2                              break;
 684   2                              break;                  
 685   2                      }
 686   1              progadd = MenuItem[menu_id].eeprom_add;
 687   1              for(i = 0; i < MenuItem[menu_id].MenuItem_Max + 1; i++)
 688   1                      {
 689   2                              //SendData(*(progbyte));
 690   2                              eeprom_en = 0xaa;
 691   2                              IapProgramByte(progadd,*(progbyte));
 692   2                              readbyte = IapReadByte(progadd);
 693   2                              if(readbyte != *progbyte)
 694   2                                      public_val.Err_Flag |= ERR_NUM_EEP_ERR; //写EERPOM错误
 695   2                              progbyte++;
 696   2                              progadd++;
 697   2                              //SendData(*(progbyte));
 698   2                              IapProgramByte(progadd,*(progbyte));
 699   2                              readbyte = IapReadByte(progadd);
 700   2                              if(readbyte != *progbyte)
 701   2                                      public_val.Err_Flag |= ERR_NUM_EEP_ERR;
 702   2                              progbyte++;
 703   2                              progadd++;
 704   2                              eeprom_en = 0;
 705   2                      }
 706   1              update_menu_to_com();
 707   1              write_param_flag = 1;    // 更新下位机参数
 708   1                              
 709   1      }
 710          
 711          #if 0
              //完成对版本号的存储
              void func_ver_update(void)
              {
                      char progbyte;
                      eeprom_en = 0xaa;
                      IapEraseSector(EEPROM_DRIVE_TYPE);
                      eeprom_en = 0;
                      progbyte = (unsigned char)(public_val.drive_type >> 8);
                      eeprom_en = 0xaa;
                      IapProgramByte(EEPROM_DRIVE_TYPE,progbyte);
                      progbyte = (unsigned char)(public_val.drive_type & 0xff);
                      IapProgramByte(EEPROM_DRIVE_TYPE + 1,progbyte);
                      progbyte = public_val.drive_indx;
                      
                      IapProgramByte(EEPROM_DRIVE_INDX,progbyte);
                      eeprom_en = 0;
              }
              
              //完成对菜单配置的存储
              void func_cfg_update(int menu_id)
              {
              unsigned char i,progbyte;
              unsigned int progadd;
                      eeprom_en = 0xaa;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 13  

                      IapEraseSector(MenuItem[menu_id].eeprom_cfg_add);
                      progadd = MenuItem[menu_id].eeprom_cfg_add;
                      progbyte = (unsigned char)(*(MenuItem[menu_id].com_max_item));
                      IapProgramByte(progadd++,progbyte);
                      
                      for(i = 0; i < MenuItem[menu_id].MenuItem_Max; i++)
                              {
                                      progbyte = (unsigned char)(MenuItem[menu_id].m_pcfg[i].m_max >> 8);
                                      IapProgramByte(progadd++,progbyte);
                                      progbyte = (unsigned char)(MenuItem[menu_id].m_pcfg[i].m_max & 0xff);
                                      IapProgramByte(progadd++,progbyte);
                                      progbyte = (unsigned char)(MenuItem[menu_id].m_pcfg[i].m_min >> 8);
                                      IapProgramByte(progadd++,progbyte);
                                      progbyte = (unsigned char)(MenuItem[menu_id].m_pcfg[i].m_min & 0xff);
                                      IapProgramByte(progadd++,progbyte);
                                      progbyte = (unsigned char)(MenuItem[menu_id].m_pcfg[i].ext_property);
                                      IapProgramByte(progadd++,progbyte);
                              }
                      eeprom_en = 0;
              }
              
              #endif
 758          
 759          /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 760          名称:   void LEDDisplay(char Key,char UpdateState)
 761          功能：  显示运行程序
 762          参数：  无
 763          返回值：无
 764          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
 765          
 766          
 767          /* 测试模式内容显示 */
 768          void test_set_display(char test_mode)
 769          {
 770   1              switch (test_mode)
 771   1              {
 772   2                      case 0:
 773   2                              LEDShowFlashString(" F--0",0);                  
 774   2                              break;
 775   2                      case 1:
 776   2                              LEDShowFlashString(" F--1",0);
 777   2                              break;
 778   2                      case 2:
 779   2                              LEDShowFlashString(" F--2",0);
 780   2                              break;                  
 781   2                      case 3:
 782   2                              LEDShowFlashString(" F--3",0);
 783   2                              break;  
 784   2                      case 4:
 785   2                              LEDShowFlashString(" F--4",0);
 786   2                              break;                          
 787   2                      case 5:
 788   2                              LEDShowFlashString(" F--5",0);
 789   2                              break;                          
 790   2                      default:
 791   2                              break;
 792   2              }       
 793   1      }
 794          
 795          
 796          
 797          void LEDDisplay(void)
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 14  

 798          {
 799   1          char TempCountB,TempDataB,TempValue,i,TempB;
 800   1          static xdata char Bell_flag = 0,zc_key_flag = 0;
 801   1          static xdata unsigned int UpdateCountB,TempCount,flash_flag = 0;    
 802   1              static xdata long DisplayValueTemp;
 803   1              
 804   1              //static xdata char Key_Val = 0,Pr_Key_Val = 0;
 805   1              //static xdata char old_key = 0;
 806   1              static xdata int Key_Val = 0,Pr_Key_Val = 0, old_key = 0;
 807   1      
 808   1              static xdata char UpdateState = 0;
 809   1      
 810   1              static xdata int Read_key_dely = 0,Read_key_dely_2 = 0,long_count = 0,long_input_flag = 0;
 811   1              static xdata int Read_key_dely_3 = 0,No_key_delay = 0;
 812   1              static xdata int Main_adj_key_delay = 0,Main_disp_other = 0;
 813   1              static xdata int edit_menu_id = 0;
 814   1              static xdata int bell_delay;
 815   1              static xdata int long_key_count = 0,long_key_step = 1,pr_long_input_flag;
 816   1              static xdata char war_bell_step = 0;
 817   1              static xdata int war_bell_delay = 0;
 818   1      
 819   1              static xdata char test_key_cnt = 0;   /* 主界面下选择键连按计数 added by james for v19407 */
 820   1              //static xdata char learn_key_cnt = 0; 
 821   1      
 822   1              int temp_max;   
 823   1              int iBellOnTime, iBellOffTime;
 824   1      
 825   1              static xdata unsigned int dj_key_dely = 0,dj_key_step = 0;
 826   1      
 827   1              unKey.u_bit.K1 = P24;
 828   1              unKey.u_bit.K2 = P23;
 829   1              unKey.u_bit.K3 = P22;
 830   1              unKey.u_bit.K4 = P21;
 831   1              
 832   1              unKey.u_bit.IO1 = P20;
 833   1              unKey.u_bit.IO2 = P35;
 834   1              unKey.u_bit.IO3 = P33;
 835   1              unKey.u_bit.IO4 = P32;
 836   1              unKey.u_bit.IO5 = P26;
 837   1              unKey.u_bit.IO6 = P27;
 838   1              unKey.u_bit.IO7 = P12;
 839   1              unKey.u_bit.IO8 = P13;
 840   1              unKey.u_bit.IO9 = P16;
 841   1      
 842   1              unKey.u_bit.RED = P17;
 843   1              unKey.u_bit.GREEN = P54;
 844   1              unKey.u_bit.BLUE = P55; 
 845   1      
 846   1              Key_Val = (int)unKey.all; 
 847   1              
 848   1              //Key_Val = (P2 >> 1) & 0x0f;
 849   1              //Key_Val |= 0xf0;
 850   1      
 851   1                      
 852   1              if(Key_Val != old_key) //有按键
 853   1              {
 854   2                      No_key_delay = public_val.ms_timer;
 855   2                      
 856   2                      if(!long_input_flag)
 857   2                      {
 858   3                              bell_delay = public_val.ms_timer;
 859   3                              Bell_flag |= 0x01;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 15  

 860   3                      }
 861   2                      else
 862   2                      {
 863   3                              Bell_flag &= 0xfe;
 864   3                      }
 865   2                      
 866   2                      if( (public_val.ms_timer - Read_key_dely_2) > KEY_DOU_DELY)
 867   2                      {
 868   3                              old_key = Key_Val;
 869   3                              Read_key_dely = public_val.ms_timer;
 870   3                              long_count = 0;
 871   3                              long_input_flag = 0;
 872   3                              long_key_step = 1;
 873   3                      }
 874   2                      else
 875   2                      {
 876   3                              Key_Val = 0;
 877   3                      }
 878   2                      
 879   2              }
 880   1              else
 881   1              {
 882   2                      if( (public_val.ms_timer - bell_delay) > BELL_ON_DELY)
 883   2                      {
 884   3                              Bell_flag &= 0xfe;
 885   3                      }
 886   2      
 887   2                      if( (public_val.ms_timer - No_key_delay) > NO_KEY_RETURN_MAIN)
 888   2                      {
 889   3                              No_key_delay = public_val.ms_timer;
 890   3                              
 891   3                              //if(edit_menu_id == MENU_ID_00000)
 892   3                              if ((edit_menu_id == MENU_ID_00000) && (DisplayState != ST_LEARN))
 893   3                              {
 894   4                                      DisplayState = ST_MAIN;
 895   4                                      Main_disp_other = 0;    /* added by james for v19407 */
 896   4                              }
 897   3                      }
 898   2                      
 899   2                      if( (public_val.ms_timer - Read_key_dely) > KEY_DOU_DELY)
 900   2                      {
 901   3                              Read_key_dely_2 = public_val.ms_timer;
 902   3                              
 903   3                              //if( ( (Key_Val&0xff) != 0xff) && (!long_input_flag) )
 904   3                              if( ( (Key_Val&0xffff) != 0xffff) && (!long_input_flag) )
 905   3                              {
 906   4                                      long_count++;
 907   4                                      
 908   4                                      //if(long_count > 10)
 909   4                                      if(long_count > 100)   
 910   4                                      {                                                       
 911   5                                              long_input_flag = 1;
 912   5                                              long_key_step = 1;
 913   5                                              long_key_count = 0;
 914   5                                              Read_key_dely_3 = public_val.ms_timer; 
 915   5                                              long_count = 10;
 916   5                                      }
 917   4                              }                                       
 918   3                      }
 919   2                      else
 920   2                      {
 921   3                              Key_Val = 0;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 16  

 922   3      
 923   3                      }
 924   2              }
 925   1              
 926   1              if(long_input_flag)  /* 长按 */
 927   1              {
 928   2                      if(public_val.ms_timer - Read_key_dely_3 > KEY_LONG_DELY)
 929   2                      {
 930   3                              long_key_count ++;
 931   3                              if(long_key_count > LONG_KEY_STEP_SWITCH)
 932   3                              {
 933   4                                      long_key_step = 10;
 934   4                              }
 935   3                              if(long_key_count)
 936   3                                      Read_key_dely_3 = public_val.ms_timer;
 937   3                              Pr_Key_Val = 0xFF;
 938   3                      }
 939   2              }
 940   1              
 941   1              if(Key_Val)
 942   1              {
 943   2                      if(Key_Val != Pr_Key_Val)
 944   2                      {
 945   3                              Pr_Key_Val = Key_Val;
 946   3                      }
 947   2                      else
 948   2                      {
 949   3                              Key_Val = 0;
 950   3                      }
 951   2              }
 952   1      
 953   1      
 954   1              /* 有按键则下发按键值和按键类型 */
 955   1                      
 956   1              if ((Key_Val == KEY_IO6) || (Key_Val == KEY_IO7) 
 957   1                      || (Key_Val == KEY_IO8))
 958   1              {
 959   2                      if(public_val.Lock_Flag && (Key_Val == KEY_IO7))
 960   2                              {
 961   3                                      public_val.Err_Flag = ERR_LOCK_SYS_ERR + public_val.Lock_Flag;  //锁机错误20
 962   3                              }
 963   2                      else
 964   2                              {
 965   3                                      write_key_flag = 1;   /* 有按键，需要写按键到主板 */
 966   3                                      
 967   3                                      gsKeyVal = Key_Val;
 968   3                                      gcKeyType = KEY_SHORT_UP_FLAG;                          
 969   3                              }
 970   2      
 971   2              }
 972   1      
 973   1              //打胶按键单独处理。
 974   1              switch(dj_key_step)
 975   1                      {
 976   2                              case 0:
 977   2                                      if(!P14)
 978   2                                      {
 979   3                                              dj_key_step = 10;
 980   3                                              dj_key_dely = public_val.ms_timer;
 981   3                                      }
 982   2                              break;
 983   2                              case 10:
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 17  

 984   2                                      if(!P14)
 985   2                                              {
 986   3                                                      if(public_val.ms_timer - dj_key_dely > 100)
 987   3                                                              {
 988   4                                                                      dj_key_step = 20;
 989   4                                                              }
 990   3                                              }
 991   2                                      else
 992   2                                              {
 993   3                                                      dj_key_step = 0;
 994   3                                              }
 995   2                              break;
 996   2                              case 20:
 997   2                                      if(P14)
 998   2                                              {
 999   3                                                      write_key_flag = 1;   /* 有按键，需要写按键到主板 */
1000   3                                                      gsKeyVal = KEY_DJ;
1001   3                                                      gcKeyType = KEY_SHORT_UP_FLAG;
1002   3                                                      dj_key_step = 0;
1003   3                                              }
1004   2                              break;
1005   2                      }
1006   1              
1007   1                      
1008   1          switch(DisplayState)
1009   1              {
1010   2                  case ST_MAIN:   /* 主界面 */
1011   2                  {
1012   3                      switch(Key_Val)
1013   3                          {
1014   4                              case KEY_SEL:
1015   4      
1016   4                                              test_key_cnt = 0;
1017   4                                              //learn_key_cnt = 0;
1018   4      
1019   4                                              if(Main_disp_other == 0)
1020   4                                              {
1021   5                                          PasswordBuff[0] = '0';
1022   5                                          PasswordBuff[1] = '0';
1023   5                                          PasswordBuff[2] = '0';
1024   5                                          PasswordBuff[3] = '0';  
1025   5                                          PasswordBuff[4] = '0';  
1026   5                                          DisplayBitNum = 4;
1027   5      
1028   5                                                      LEDShowFlashString(&PasswordBuff[0],0);
1029   5                                          DisplayState = ST_PASSWORD;
1030   5      
1031   5                                                      return;
1032   5                                              }
1033   4                                              else
1034   4                                              {
1035   5                                                      if (qz_wait == 1)
1036   5                                                      {
1037   6                                                              qz_wait = 0;   // 清等待状态
1038   6      
1039   6                                                              war_bell_step = 0;  // 清除蜂鸣器响声
1040   6                                                              cPauseBell = 0;                                                 
1041   6                                                      }
1042   5                                                      
1043   5                                                      Main_disp_other = 0;
1044   5                                              }
1045   4                                                                                      
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 18  

1046   4                                              
1047   4                                  break;      
1048   4                                              
1049   4                              case KEY_REDUCE:         //减号
1050   4                              
1051   4                                              test_key_cnt = 0;
1052   4                                              //learn_key_cnt = 0;
1053   4                                              
1054   4                                              if (long_input_flag && (Main_disp_other == 0))
1055   4                                              {
1056   5                                                      if(public_val.work_count_user != public_val.work_count)
1057   5                                                              {
1058   6                                                                      public_val.work_count_user = public_val.work_count;
1059   6                                                                      write_clear_cnt_flag = 1;    /* 发送命令至主板清除开机后计数 */
1060   6                                                                      save_user_count();
1061   6                                                              }
1062   5                                              }                                       
1063   4      
1064   4                                              if (speed_mode == 1)  //高速
1065   4                                              {
1066   5                                                      write_speed_mode_flag = 1;  
1067   5                                                      speed_mode = 0;   //切到低速
1068   5                                              }
1069   4                                      
1070   4                                              break;  
1071   4                                              
1072   4                              case KEY_INCREASE:       //加号
1073   4      
1074   4                                              test_key_cnt = 0;
1075   4                                              
1076   4                                              Main_adj_key_delay = public_val.ms_timer;                                       
1077   4                                              Main_disp_other = 5;
1078   4                                              if (speed_mode == 0)  //低速
1079   4                                              {
1080   5                                                      write_speed_mode_flag = 1;  
1081   5                                                      speed_mode = 1;  //切到高速
1082   5                                              }
1083   4      #if 0
                                                      if (Main_disp_other == 0)
                                                      {
                                                              /* 进入参数菜单 */
                                                          pMenu = pItem[0].m_pcfg;    // 指向数据                             
                                                              now_menu.menu_id = 0;
                                                              now_menu.par_id = 0;
                                                              now_menu.event_flag = 1;
                                              DisplayItemNum  = 0;
              
                                                              //DisplayMenuTotal = Menu_Number[0];
                                                              DisplayMenuTotal = Menu0_Number;
                                                              if(DisplayMenuTotal > 0)
                                                      DisplayState=ST_MENU;                                                           //进入相应菜单  
                                          return;
                                                      }
              #endif                                          
1100   4                                                                                      
1101   4                                              break;  
1102   4      
1103   4                              case KEY_GREEN:          //纸长
1104   4      
1105   4                                              test_key_cnt = 0;
1106   4                                              
1107   4                                              if (Main_disp_other == 0)
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 19  

1108   4                                              {
1109   5                                                      /* 进入参数菜单 */
1110   5                                                  pMenu = pItem[0].m_pcfg;    // 指向数据     
1111   5                                                      now_menu.menu_id = 0;
1112   5                                                      now_menu.par_id = 0;
1113   5                                                      now_menu.event_flag = 1;
1114   5                                      DisplayItemNum  = 0;
1115   5                                                      zc_key_flag = 1;
1116   5                                                      //DisplayMenuTotal = Menu_Number[0];
1117   5                                                  edit_menu_id = 0;
1118   5                                                      DisplayMenuTotal = pItem[edit_menu_id].MenuItem_Max;;
1119   5                                                      if(DisplayMenuTotal > 0)
1120   5                                              DisplayState=ST_MENU;                                                           //进入相应菜单                                                  
1121   5                                  return;
1122   5                                              }
1123   4                                                                                      
1124   4                                              break;  
1125   4      
1126   4                              case KEY_BLUE:           //捆数
1127   4      
1128   4                                              test_key_cnt = 0;
1129   4                                              
1130   4                                              if (Main_disp_other == 0)
1131   4                                              {
1132   5                                                      /* 进入参数菜单 */
1133   5                                                  pMenu = pItem[0].m_pcfg;    // 指向数据                             
1134   5                                                      now_menu.menu_id = 0;
1135   5                                                      now_menu.par_id = 1;
1136   5                                                      now_menu.event_flag = 1;
1137   5                                      DisplayItemNum  = 1;                    
1138   5                                                      zc_key_flag = 1;
1139   5                                                      //DisplayMenuTotal = Menu_Number[0];
1140   5                                                  edit_menu_id = 0;
1141   5                                                      DisplayMenuTotal = pItem[edit_menu_id].MenuItem_Max;;
1142   5                                                      if(DisplayMenuTotal > 0)
1143   5                                              DisplayState=ST_MENU;                                                           //进入相应菜单  
1144   5                                                      
1145   5                                  return;
1146   5                                              }
1147   4                                                                                      
1148   4                                              break;  
1149   4      
1150   4                                              
1151   4                              case KEY_ENT:   //查看程序版本
1152   4      
1153   4                                              if (qz_wait == 0)  //不是切纸等待状态
1154   4                                              {
1155   5                                                      //learn_key_cnt = 0;
1156   5      
1157   5                                                      if (long_input_flag)
1158   5                                                      {                                               
1159   6                                                              if (test_key_cnt < TEST_MODE_CNT)
1160   6                                                              {
1161   7                                                                      test_key_cnt++;
1162   7                                                              }
1163   6                                                      }
1164   5                                                      else
1165   5                                                      {
1166   6                                                              test_key_cnt = 0;
1167   6                                                      }
1168   5                                                      
1169   5                                                      Main_adj_key_delay = public_val.ms_timer;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 20  

1170   5                                                      Main_disp_other = 2;
1171   5                                              } 
1172   4                                              else   // 切纸等待状态
1173   4                                              {
1174   5                                                      write_key_flag = 1;   /* 有按键，需要写按键到主板 */
1175   5      
1176   5                                                      // 下发切纸命令
1177   5                                                      gsKeyVal = KEY_IO3;
1178   5                                                      gcKeyType = KEY_SHORT_UP_FLAG; 
1179   5                                                      
1180   5                                                      Main_disp_other = 0;  // 返回显示筒数
1181   5                                                      qz_wait = 0;   // 清等待状态
1182   5      
1183   5                                                      war_bell_step = 0;  // 清除蜂鸣器响声
1184   5                                                      cPauseBell = 0;
1185   5                                                      
1186   5                                              }
1187   4                                              
1188   4                                              break;          
1189   4      
1190   4                                      case KEY_IO3:   // 切纸
1191   4      
1192   4                                              if (qz_wait == 0)  //未等待切纸
1193   4                                              {
1194   5                                                      write_warning_flag = 1;   // 下发报警消息
1195   5                                                      
1196   5                                                      //进入切纸等待
1197   5                                                      Main_disp_other = 4;
1198   5                                                      qz_wait = 1;                                            
1199   5                                              }
1200   4                                              
1201   4                                              break;
1202   4                                              
1203   4                          }
1204   3              
1205   3                              if(Main_disp_other == 0)  /* 返回主界面 */
1206   3                              {
1207   4                                      TempCount = main_menu_cfg[0].m_rate;  
1208   4                                      TempDataB = DisplayItemNum;
1209   4                              
1210   4                                      if(!public_val.Err_Flag)                                //无报错
1211   4                                      {
1212   5                                              if(!public_val.Work_Pause_Flag)     /* 无暂停，刷新显示当前已洗饼数 */
1213   5                                              {
1214   6                                                      if(public_val.Bell_Flag == YES)   /* 蜂鸣器长暂停响 added for v19416 */
1215   6                                                      {
1216   7                                                              cPauseBell = 1;
1217   7                                                              if(!war_bell_step) war_bell_step = 1;
1218   7                                                      }
1219   6                                                      else
1220   6                                                      {
1221   7                                                              Bell_flag &= 0xfd;
1222   7                                                      }
1223   6                                                      public_val.main_disp_val = public_val.work_count - public_val.work_count_user;
1224   6                                                      DisplayValueTemp = (long)public_val.main_disp_val; 
1225   6                                                      TempValue=DataToStr(&DisplayValueTemp,
1226   6                                                                          INT32_SIZE,
1227   6                                                                                              5,
1228   6                                                                                              0,
1229   6                                                                                              DisplayBuff,0,TY_D );           
1230   6                                                      LED_ShowNumber(&DisplayBuff[0],0);
1231   6                                                      
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 21  

1232   6                                                      //Bell_flag &= 0xfd;   
1233   6      
1234   6                                                      
1235   6                                              }
1236   5                                              else
1237   5                                              {
1238   6                                                      LEDShowFlashString("P--",0);                                            //显示项目名称内容
1239   6                                                      DisplayValueTemp = public_val.Work_Pause_Flag & 0x7F;
1240   6                                                      if(public_val.Work_Pause_Flag & 0x80)
1241   6                                                              {
1242   7                                                                      if(!war_bell_step) war_bell_step = 1;
1243   7                                                              }
1244   6                                                      TempValue=DataToStr(&DisplayValueTemp,
1245   6                                                                          INT32_SIZE,
1246   6                                                                                              5,
1247   6                                                                                              0,
1248   6                                                                                              DisplayBuff,0,TY_D );           
1249   6                                                      LED_ShowNumber(&DisplayBuff[3],3);      
1250   6      
1251   6                                                      cPauseBell = 1;
1252   6      
1253   6                                              }
1254   5                                      }
1255   4                                      else
1256   4                                      {
1257   5                              
1258   5                                              if ((public_val.Err_Flag == P_FINISH_LEARN1)
1259   5                                                      || (public_val.Err_Flag == P_FINISH_LEARN2)) 
1260   5                                              {
1261   6                                                      //学习完成也显示送纸计数
1262   6                                                      if(public_val.Bell_Flag == YES)   /* 蜂鸣器长暂停响 added for v19416 */
1263   6                                                      {
1264   7                                                              cPauseBell = 1;
1265   7                                                              if(!war_bell_step) war_bell_step = 1;
1266   7                                                      }
1267   6                                                      else
1268   6                                                      {
1269   7                                                              Bell_flag &= 0xfd;
1270   7                                                      }
1271   6                                                      
1272   6                                                      DisplayValueTemp = (long)public_val.main_disp_val; 
1273   6                                                      TempValue=DataToStr(&DisplayValueTemp,
1274   6                                                                          INT32_SIZE,
1275   6                                                                                              5,
1276   6                                                                                              0,
1277   6                                                                                              DisplayBuff,0,TY_D );           
1278   6                                                      LED_ShowNumber(&DisplayBuff[0],0);
1279   6      
1280   6                                                      
1281   6                                              }
1282   5                                              else             // 正常报错                    
1283   5                                              {
1284   6                                                      LEDShowFlashString("E--",0);            /* modified by james at 2014-4-12 */
1285   6                                                      
1286   6                                                      if(!war_bell_step) 
1287   6                                                              war_bell_step = 1;
1288   6                                                      
1289   6                                                      DisplayValueTemp = public_val.Err_Flag;
1290   6                                                      TempValue=DataToStr(&DisplayValueTemp,
1291   6                                                                          INT32_SIZE,
1292   6                                                                                              5,
1293   6                                                                                              0,
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 22  

1294   6                                                                                              DisplayBuff,0,TY_D );           
1295   6                                                      LED_ShowNumber(&DisplayBuff[3],3);              
1296   6      
1297   6                                                      cPauseBell = 0;
1298   6                                              }
1299   5                                      }
1300   4      
1301   4                                      if(l_stop_poll)                                                                                         //循环显示
1302   4                                      if(++CycShowCount > main_menu_cfg[0].m_time)                            //---------------周期计数器判断     
1303   4                                      {
1304   5                                          CycShowCount=0;
1305   5                                              DisplayItemNum++;
1306   5                                              TempCount = 0; 
1307   5                                      }
1308   4                              }
1309   3                              else if(Main_disp_other == 2)    /* 显示版本号 */
1310   3                              {
1311   4                                      DisplayValueTemp = public_val.version;
1312   4                                      //DisplayValueTemp = public_val.input_pass_mask;
1313   4                                      TempValue=DataToStr(&DisplayValueTemp,
1314   4                                                          INT32_SIZE,
1315   4                                                                              5,
1316   4                                                                              0,
1317   4                                                                              DisplayBuff,0,TY_D );           
1318   4                                      LED_ShowNumber(&DisplayBuff[0],0);      
1319   4                                      if( (public_val.ms_timer - Main_adj_key_delay) > MAIN_ADJ_DELAY)
1320   4                                      {
1321   5                                              Main_disp_other = 3;
1322   5                                      }
1323   4                              }
1324   3                              else if(Main_disp_other == 3)    /* 显示传感器等输入IO值 */
1325   3                              {
1326   4                                      DisplayValueTemp = (long)public_val.io_read;
1327   4                                      //DisplayValueTemp &= 0xff;
1328   4                                      DisplayValueTemp &= 0xffff;
1329   4                                      TempValue=DataToStr(&DisplayValueTemp,
1330   4                                                          INT32_SIZE,
1331   4                                                                              5,
1332   4                                                                              0,
1333   4                                                                              DisplayBuff,0,TY_D );           
1334   4                                      LED_ShowNumber(&DisplayBuff[0],0);      
1335   4                              }
1336   3                              else if (Main_disp_other == 4)    /* 切纸等待 */
1337   3                              {
1338   4                                      LEDShowFlashString("Q2---",0);
1339   4      
1340   4                                      if(!war_bell_step) 
1341   4                                              war_bell_step = 1;                                              
1342   4      
1343   4                                      cPauseBell = 1;         
1344   4                              }
1345   3                              else if(Main_disp_other == 5)    /* 显示传感器等输入IO值 */
1346   3                              {
1347   4                                      DisplayValueTemp = (long)public_val.password_index_disp;
1348   4                                      //DisplayValueTemp = (long)(public_val.password_val[0] << 8) + public_val.password_val[1];
1349   4                                      //DisplayValueTemp &= 0xff;
1350   4                                      DisplayValueTemp &= 0xffff;
1351   4                                      TempValue=DataToStr(&DisplayValueTemp,
1352   4                                                          INT32_SIZE,
1353   4                                                                              5,
1354   4                                                                              0,
1355   4                                                                              DisplayBuff,0,TY_D );           
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 23  

1356   4                                      LED_ShowNumber(&DisplayBuff[0],0);      
1357   4                              }
1358   3                  }
1359   2      
1360   2                      if (test_key_cnt == TEST_MODE_CNT)  /* 长按计数后进入测试参数设置界面 added by james for v19407 */
1361   2                      {
1362   3                              test_key_cnt = 0;
1363   3                              DisplayState = ST_TEST;
1364   3                              Main_disp_other = 4;
1365   3                              
1366   3                              test_set_display(test_mode);
1367   3                      }               
1368   2      
1369   2              #if 0
                              if (learn_key_cnt == LEARN_MODE_CNT)  /* 长按计数后进入测试参数设置界面 added by james for v19407 */
                              {
                                      learn_key_cnt = 0;
                                      DisplayState = ST_LEARN;
                                      Main_disp_other = 0;    
                                      
                                      LEDShowFlashString("P-- 0",0);
              
                                      public_val.Err_Flag = 0;   
              
                                      write_learn_mode_flag = 1;  
                              }       
                      #endif
1383   2                      
1384   2                  break;
1385   2      
1386   2      
1387   2                      case ST_PASSWORD://---------------------------------------------密码输入界面
1388   2      
1389   2                      switch(Key_Val)
1390   2                          {
1391   3                              case KEY_SEL:
1392   3                                  DisplayItemNum = 0;                 
1393   3                                              //DisplayItemNum0 = 0;
1394   3                                              //DisplayItemNum1 = 0;
1395   3                                  DisplayState = ST_MAIN;
1396   3                                  return;  
1397   3                                  break;      
1398   3                              case KEY_REDUCE:
1399   3                                      if(--DisplayBitNum < 0)
1400   3                                          DisplayBitNum=4;            
1401   3                                  break;      
1402   3                              case KEY_INCREASE:
1403   3                                      if( ++PasswordBuff[DisplayBitNum] > '9')
1404   3                                          PasswordBuff[DisplayBitNum]='0';                    
1405   3                                  break;      
1406   3                              case KEY_ENT:
1407   3                                  for(TempCountB=1;TempCountB<MenuTotals;TempCountB++)
1408   3                                  {
1409   4                                      if(PasswordBuff[0]==pItem[TempCountB].m_pass[0])//
1410   4                                      if(PasswordBuff[1]==pItem[TempCountB].m_pass[1])//
1411   4                                      if(PasswordBuff[2]==pItem[TempCountB].m_pass[2])//
1412   4                                      if(PasswordBuff[3]==pItem[TempCountB].m_pass[3])//
1413   4                                      if(PasswordBuff[4]==pItem[TempCountB].m_pass[4])//密码符合要求
1414   4                                      {
1415   5                                              if(TempCountB == MENU_ID_10104)
1416   5                                                      {
1417   6                                                              if(  ((public_val.Disp_Dz_10103[10] == 0)     //密码6为空或者校验成功，允许进入10104
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 24  

1418   6                                                                                      &&(public_val.Disp_Dz_10103[11] == 0))
1419   6                                                                                      ||(public_val.input_pass_mask & 0x20)
1420   6                                                                                      ||(public_val.Disp_Dz_10104[PASS_LOCK_COUNT - 1] == 0)
1421   6                                                                                 )
1422   6                                                                      {
1423   7                                                                              ;
1424   7                                                                      }
1425   6                                                                              else
1426   6                                                                                      return;
1427   6                                                      }
1428   5                                                              edit_menu_id = TempCountB; 
1429   5                                                          pMenu = pItem[TempCountB].m_pcfg;                                   
1430   5                                                              now_menu.menu_id = edit_menu_id;
1431   5                                                              now_menu.par_id = 0;
1432   5                                                              now_menu.event_flag = 1;
1433   5                                          DisplayItemNum  = 0;                                        
1434   5                                                              DisplayMenuTotal = pItem[edit_menu_id].MenuItem_Max;
1435   5                                                              if(DisplayMenuTotal > 0)
1436   5                                              DisplayState=ST_MENU;                                                           //进入相应菜单                    
1437   5                                          return;
1438   5                                      }                
1439   4                                  }                                                                                                           
1440   3                                              return;
1441   3                                  break;                      
1442   3                          }
1443   2                      if( flash_flag  && !long_input_flag  )                                                                                          //闪烁功能
1444   2                      {       
1445   3                          LEDClearChar(DisplayBitNum, 1);
1446   3                      }
1447   2                      else
1448   2                      {
1449   3                          LEDShowFlashString(&PasswordBuff[0], 0);            
1450   3                      }               
1451   2                  
1452   2                              break;
1453   2      
1454   2                      case ST_LEARN:
1455   2      
1456   2                              switch(Key_Val) 
1457   2                          {
1458   3                              case KEY_SEL:  // 选择键返回
1459   3                                      Main_disp_other = 0;
1460   3                                              DisplayBitNum = 4;
1461   3                                              CycShowCount  = 0;
1462   3                                              now_menu.menu_id = 888;
1463   3                                              now_menu.event_flag = 1;
1464   3                                  DisplayItemNum = 0; 
1465   3                                  DisplayState   = ST_MAIN;                                                                                   //返回主界面
1466   3                                  
1467   3                                              war_bell_step = 0;  // 清除蜂鸣器响声
1468   3                                              cPauseBell = 0;
1469   3      
1470   3                                              return;
1471   3                                              
1472   3                                              break;  
1473   3                                              
1474   3                                      default:
1475   3                                              break;
1476   3                              }
1477   2      
1478   2                              if ((public_val.Err_Flag == P_FINISH_LEARN1)
1479   2                                      || (public_val.Err_Flag == P_FINISH_LEARN2))
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 25  

1480   2                              {
1481   3                                      if (public_val.Err_Flag == P_FINISH_LEARN1)    // 学习完成
1482   3                                      {
1483   4                                              LEDShowFlashString("P-- 1",0);
1484   4      
1485   4                                              if(!war_bell_step) 
1486   4                                                      war_bell_step = 1;                                              
1487   4      
1488   4                                              cPauseBell = 1;                                         
1489   4                                      }
1490   3                                      else if (public_val.Err_Flag == P_FINISH_LEARN2)    // 学习完成
1491   3                                      {
1492   4                                              LEDShowFlashString("P-- 2",0);
1493   4      
1494   4                                              if(!war_bell_step) 
1495   4                                                      war_bell_step = 1;                                              
1496   4      
1497   4                                              cPauseBell = 1;                                         
1498   4                                      }
1499   3                              }       
1500   2                              else
1501   2                              {
1502   3                                      LEDShowFlashString("P-- 0",0);
1503   3                                      war_bell_step = 0;
1504   3                                      cPauseBell = 0; 
1505   3                              }
1506   2      
1507   2                              break;
1508   2      
1509   2                      case ST_TEST:        /* 测试参数设置界面响应 added by james for v19407 */
1510   2                              switch(Key_Val)
1511   2                          {
1512   3                              case KEY_SEL:
1513   3                                      Main_disp_other = 0;
1514   3                                              DisplayBitNum = 4;
1515   3                                              CycShowCount  = 0;
1516   3                                              now_menu.menu_id = 888;
1517   3                                              now_menu.event_flag = 1;
1518   3                                  DisplayItemNum = 0; 
1519   3                                  DisplayState   = ST_MAIN;                                                                                   //返回主界面
1520   3                                  break;      
1521   3      
1522   3                                      case KEY_INCREASE:
1523   3                                              if (test_mode < 1)
1524   3                                              {
1525   4                                                      test_mode++;
1526   4      
1527   4                                                      write_test_mode_flag = 1;  /* 写测试模式到主板 */
1528   4                                              }
1529   3                                              test_set_display(test_mode);
1530   3                                              
1531   3                                              if (test_mode > 0)  /* 测试模式 */
1532   3                                              {
1533   4                                                      //ResetDoorForTest();
1534   4                                              }                                       
1535   3                                              break;
1536   3      
1537   3                                      case KEY_REDUCE:
1538   3                                              if (test_mode > 0)
1539   3                                              {
1540   4                                                      test_mode--;
1541   4      
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 26  

1542   4                                                      write_test_mode_flag = 1;  /* 写测试模式到主板 */                                               
1543   4                                              }
1544   3                                              test_set_display(test_mode);                                    
1545   3                                              break;
1546   3      
1547   3                                      case KEY_IO7:  // 启动
1548   3                                              LEDShowFlashString("   11",0);
1549   3                                              break;
1550   3      
1551   3                                      case KEY_IO8:  // 停止
1552   3                                              LEDShowFlashString("   12",0);
1553   3                                              break;
1554   3      
1555   3                                      case KEY_RED:  // 收纸
1556   3                                              LEDShowFlashString("   13",0);
1557   3                                              break;
1558   3      
1559   3                                      case KEY_IO9:  // 发纸
1560   3                                              LEDShowFlashString("   14",0);
1561   3                                              break;
1562   3      
1563   3                                      case KEY_IO2:  // 退纸
1564   3                                              LEDShowFlashString("   15",0);
1565   3                                              break;
1566   3      
1567   3                                      case KEY_IO1:  // 进纸
1568   3                                              LEDShowFlashString("   16",0);
1569   3                                              break;
1570   3      
1571   3                                      case KEY_IO4:  // 下料
1572   3                                              LEDShowFlashString("   17",0);
1573   3                                              break;
1574   3      
1575   3                                      case KEY_IO5:  // 搓条
1576   3                                              LEDShowFlashString("   18",0);
1577   3                                              break;
1578   3      
1579   3                                      case KEY_IO6:  // 停止送纸
1580   3                                              LEDShowFlashString("   19",0);
1581   3                                              break;
1582   3      
1583   3                                      case KEY_IO3:  // 切纸
1584   3                                              LEDShowFlashString("   20",0);
1585   3                                              break;
1586   3                                              
1587   3                                      case KEY_GREEN:  // 纸长
1588   3                                              LEDShowFlashString("   21",0);
1589   3                                              break;
1590   3      
1591   3                                      case KEY_BLUE:  // 捆数
1592   3                                              LEDShowFlashString("   22",0);
1593   3                                              break;
1594   3                                              
1595   3                                      default:
1596   3                                              break;
1597   3                              }
1598   2      
1599   2      
1600   2                      break;
1601   2      
1602   2                  case ST_MENU:                       /* 菜单数据查看 */
1603   2                  { 
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 27  

1604   3                      switch(Key_Val)
1605   3                          {
1606   4                              case KEY_SEL:
1607   4                                      Main_disp_other = 0;
1608   4                                              DisplayBitNum = 4;
1609   4                                              CycShowCount  = 0;
1610   4                                              now_menu.menu_id = 888;
1611   4                                              now_menu.event_flag = 1;
1612   4                                  DisplayItemNum = 0; 
1613   4                                  DisplayState   = ST_MAIN;                                                                                   //返回主界面
1614   4                                              //DIS_OPTIONING=0;
1615   4                                  break;      
1616   4                              case KEY_REDUCE:
1617   4                                  if (DisplayItemNum-- == 0)
1618   4                                      DisplayItemNum = DisplayMenuTotal-1;    
1619   4                                              now_menu.par_id = DisplayItemNum;
1620   4                                              
1621   4                                              now_menu.par_id = DisplayItemNum;
1622   4                                              now_menu.event_flag = 1;
1623   4                                  break;      
1624   4                              case KEY_INCREASE:
1625   4      
1626   4                                  if (++DisplayItemNum >= DisplayMenuTotal) 
1627   4                                      DisplayItemNum = 0;     
1628   4      
1629   4                                              now_menu.par_id = DisplayItemNum;
1630   4                                              now_menu.event_flag = 1;
1631   4                                  break;      
1632   4                              case KEY_ENT:   
1633   4                                              if(
1634   4                                                      (now_menu.menu_id == MENU_ID_10104)  //设定数校验是否有权限修改
1635   4                                                      )
1636   4                                                      {
1637   5                                                              if(public_val.input_pass_mask & (1<<DisplayItemNum))
1638   5                                                                      {
1639   6                                                                              zc_key_flag = 5;
1640   6                                                                      }
1641   5                                                      }
1642   4                                              else if(now_menu.menu_id == MENU_ID_10103)
1643   4                                                      {
1644   5                                                              if(public_val.input_pass_mask & (1<<(DisplayItemNum>>1)))
1645   5                                                                      {
1646   6                                                                              zc_key_flag = 5;
1647   6                                                                      }
1648   5                                                      }
1649   4                                              else
1650   4                                                      {
1651   5                                                              zc_key_flag = 5;
1652   5                                                      }
1653   4                                  break;                      
1654   4                          }        
1655   3      
1656   3                              //纸长按键特殊处理
1657   3                              //////////////////////////////////////////////////////////////////////////////////////
1658   3                              if (now_menu.menu_id == 0 && zc_key_flag)
1659   3                                      {
1660   4                                              zc_key_flag ++;
1661   4                                      }
1662   3      
1663   3                              if(zc_key_flag == 5)
1664   3                                      {
1665   4                                              zc_key_flag = 0;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 28  

1666   4                                          TempDataB = DisplayItemNum;
1667   4                                              if (TY_D == TY_B  || 
1668   4                                                      TY_D == TY_D  ||  
1669   4                                                      TY_D == TY_H)                                                                   //数值类
1670   4                                              {
1671   5                                                      DisplayBitNum = 4;
1672   5                                                      DataType=TY_D;
1673   5      
1674   5                                                      //锁机相关操作特殊处理
1675   5                                                      if( (now_menu.menu_id == MENU_ID_10103)                 //未解锁不显示密码
1676   5                                                          && (!(public_val.input_pass_mask & (1<<(DisplayItemNum>>1)))) //锁定状态下锁机参数全部显示为0
1677   5                                                              )
1678   5                                                              TempInputData = 0;
1679   5                                                  else
1680   5                                                      TempInputData = *(int *)pDataValue->m_data_vale;                        
1681   5      
1682   5                                                      DisplayState=ST_DATA_INPUT;                                                                             //进入参数输入界面
1683   5      
1684   5                                                      pDataValue=&pMenu[TempDataB];
1685   5                                                      DataType=TY_D;
1686   5                                                      TempValue=DataToStr(pDataValue->m_data_vale,
1687   5                                                                      INT16_SIZE,
1688   5                                                                                          DEFAUT_POSE,
1689   5                                                                                          DEFAUT_POT,
1690   5                                                                                          DisplayBuff,0,DataType);                            
1691   5                                                      
1692   5                                                      InputDataLen = DEFAUT_POSE+DEFAUT_POT;
1693   5                                                      //DisplayBitNum = InputDataLen - 1; 
1694   5                                                      PasswordBuff[0] = '0';
1695   5                                                      PasswordBuff[1] = '0';
1696   5                                                      switch(InputDataLen)
1697   5                                                      {       /*用于复制显示缓冲区数据*/                                  
1698   6                                                      case 3:
1699   6                                                              PasswordBuff[2]=DisplayBuff[TempValue];
1700   6                                                              if(PasswordBuff[2] == ' ') PasswordBuff[2] = '0';
1701   6                                                              PasswordBuff[3]=DisplayBuff[TempValue+1];
1702   6                                                              if(PasswordBuff[3] == ' ') PasswordBuff[3] = '0';
1703   6                                                              PasswordBuff[4]=DisplayBuff[TempValue+2];                               
1704   6                                                          break;                      
1705   6                                                      case 2:
1706   6                                                              PasswordBuff[2]=' ';
1707   6                                                              PasswordBuff[3]=DisplayBuff[TempValue+1];
1708   6                                                              if(PasswordBuff[3] == ' ') PasswordBuff[3] = '0';
1709   6                                                              PasswordBuff[4]=DisplayBuff[TempValue+2];                               
1710   6                                                          break;              
1711   6                                                      case 1:
1712   6                                                              PasswordBuff[2]=' ';
1713   6                                                              PasswordBuff[3]=' ';
1714   6                                                              PasswordBuff[4]=DisplayBuff[TempValue+2];
1715   6                                                              break;                          
1716   6                                                      }
1717   5                                                      pr_long_input_flag = 0;
1718   5                                                      //pDataValue.m_max = 999;
1719   5                                                      //pDataValue.m_min = 0;
1720   5                                                      DisplayState=ST_DATA_INPUT;                                                                             //进入参数输入界面
1721   5                                              }       
1722   4                                      }
1723   3                              //////////////////////////////////////////////////////////////////////////////////////
1724   3                                      
1725   3                              if(TempCount > 0)           
1726   3                              {       
1727   4                                      TempCount-- ;
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 29  

1728   4                                      break;          
1729   4                              }
1730   3                              TempCount = main_menu_cfg[0].m_rate;  
1731   3      
1732   3                          pDataValue=&pMenu[DisplayItemNum];  
1733   3      //密码校验成功，进入菜单显示内容，以及翻动参数显示内容
1734   3      #if MENU_PASS_ON
1735   3                              //锁机相关操作特殊处理
1736   3                              if( (now_menu.menu_id == MENU_ID_10103)                 //未解锁不显示密码
1737   3                                  && (!(public_val.input_pass_mask & (1<<(DisplayItemNum>>1)))) //锁定状态下锁机参数全部显示为0
1738   3                                      )
1739   3                                      TempInputData = 0;
1740   3                          else
1741   3      #endif                          
1742   3                              TempInputData = *(int *)pDataValue->m_data_vale;                        
1743   3      
1744   3                              LEDShowCaption(DisplayItemNum);
1745   3      
1746   3                              TempValue=DataToStr(&TempInputData,   //pDataValue->m_data_vale
1747   3                                                  INT32_SIZE,      //pDataValue->m_size,
1748   3                                                                      DEFAUT_POSE,
1749   3                                                                      DEFAUT_POT,
1750   3                                                                      DisplayBuff,0,TY_D );           
1751   3                              LED_ShowNumber(&DisplayBuff[TempValue],2);
1752   3                  }
1753   2                  break;
1754   2      
1755   2                  case ST_DATA_INPUT: /* 数据输入画面 */
1756   2                  {
1757   3                      switch(Key_Val)
1758   3                          {
1759   4                              case KEY_SEL:   
1760   4                                              if (now_menu.menu_id == 0)
1761   4                                                      {
1762   5                                                      Main_disp_other = 0;
1763   5                                                              DisplayBitNum = 4;
1764   5                                                              CycShowCount  = 0;
1765   5                                                              now_menu.menu_id = 888;
1766   5                                                              now_menu.event_flag = 1;
1767   5                                                  DisplayItemNum = 0; 
1768   5                                                  DisplayState   = ST_MAIN;                                                                                   //返回主界面
1769   5                                                      }
1770   4                                              else
1771   4                                              DisplayState = ST_MENU;
1772   4                                  break;      
1773   4                              case KEY_REDUCE: //减少
1774   4                                      if(pMenu[DisplayItemNum].ext_property & 0x01)
1775   4                                              {
1776   5                                                      ;
1777   5                                              }
1778   4                                      else
1779   4                                              {
1780   5                                                              TempInputData-=long_key_step;
1781   5                                                              if(TempInputData<pDataValue->m_min) //
1782   5                                                                      TempInputData = pDataValue->m_min; //pDataValue->m_min;
1783   5                                                      }
1784   4                                  break;      
1785   4                              case KEY_INCREASE: //增加
1786   4                                      if(pMenu[DisplayItemNum].ext_property & 0x01)
1787   4                                              {
1788   5                                                              ;
1789   5                                              }
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 30  

1790   4                                      else
1791   4                                              {
1792   5                                                              TempInputData+=long_key_step;
1793   5                                                              temp_max = pDataValue->m_max;
1794   5                                                              if(TempInputData>temp_max) // temp_max
1795   5                                                                      TempInputData=temp_max;
1796   5                                                      }
1797   4                                  break;      
1798   4                              case KEY_ENT:
1799   4                                      if(!long_input_flag)
1800   4                                      {                       
1801   5                                                      TempInputData=StrToData(PasswordBuff,5,DataType);
1802   5                                                      if(TempInputData <= pDataValue->m_max && TempInputData >= pDataValue->m_min)
1803   5                                                      {
1804   6                                                      switch(INT16_SIZE)
1805   6                                                          {
1806   7                                                          case INT32_SIZE:
1807   7                                                              *(long *)pDataValue->m_data_vale = TempInputData;
1808   7                                                              break;
1809   7                                                          case INT16_SIZE:
1810   7                                                              *(int *)pDataValue->m_data_vale = (int)TempInputData;
1811   7                                                              break;                  
1812   7                                                          case INT8_SIZE:
1813   7                                                              *(char *)pDataValue->m_data_vale = (char)TempInputData;
1814   7                                                              break;                  
1815   7                                                              }       
1816   6                                                              if(PasswordBuff[2] == '0')
1817   6                                                                      {
1818   7                                                                              PasswordBuff[2] = ' ';
1819   7                                                                              if(PasswordBuff[3] == '0') PasswordBuff[3] = ' ';
1820   7                                                                      }
1821   6                                                              LED_ShowNumber(&PasswordBuff[2],2);
1822   6      
1823   6      #if MENU_PASS_ON
1824   6                                                              //修改操作，校对密码是否与保存的一致
1825   6                                                              if( now_menu.menu_id == MENU_ID_10102)
1826   6                                                                      {
1827   7                                                                              TempB = DisplayItemNum / 2;
1828   7                                                                              //for(TempB = 0; TempB < PASS_LOCK_COUNT; TempB++)
1829   7                                                                                      {
1830   8                                                                                              if( (public_val.Disp_Dz_10103[TempB * 2] == public_val.Disp_Dz_10102[TempB * 2])
1831   8                                                                                                      && (public_val.Disp_Dz_10103[TempB * 2 + 1] == public_val.Disp_Dz_10102[TempB * 2 + 1]) 
1832   8                                                                                                      )
1833   8                                                                                                      {
1834   9                                                                                                              public_val.input_pass_mask |= 1 << TempB;
1835   9                                                                                                              public_val.Disp_Dz_10104[TempB] = 0;
1836   9                                                                                                              for(i = 0; i < TempB; i ++)                             //此段以下的都清除
1837   9                                                                                                                      public_val.Disp_Dz_10104[i] = 0;
1838   9                                                                                                              func_menu_update(MENU_ID_10104);
1839   9                                                                                                      }
1840   8                                                                                      }
1841   7                                                                              
1842   7                                                                                      DisplayState = ST_MENU;;                                                                        
1843   7                                                                      }
1844   6                                                              else
1845   6      #endif
1846   6                                                                      func_menu_update(now_menu.menu_id);
1847   6                                                                              
1848   6      
1849   6                                                              /* 如果将倒数第2个参数改为1则全部恢复默认参数 added by james for v19407 */
1850   6                                                              /*if ((DisplayItemNum == PARM_DEFAULT)
1851   6                                                                      && (TempInputData == 1))
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 31  

1852   6                                                              {
1853   6                                                                      for (i = 0; i < MENU_ID_00000_MAX_ITEM; i++)
1854   6                                                                      {
1855   6                                                                              public_val.menu_parm[i] = iDefaultParm[i];
1856   6                                                                      }
1857   6                                                              }*/
1858   6                                                              
1859   6                                                              
1860   6                                                      }
1861   5                                      }
1862   4      
1863   4                                              if (now_menu.menu_id == 0)
1864   4                                                      {
1865   5                                                      Main_disp_other = 0;
1866   5                                                              DisplayBitNum = 4;
1867   5                                                              CycShowCount  = 0;
1868   5                                                              now_menu.menu_id = 888;
1869   5                                                              now_menu.event_flag = 1;
1870   5                                                  DisplayItemNum = 0; 
1871   5                                                  DisplayState   = ST_MAIN;                                                                                   //返回主界面
1872   5                                                      }
1873   4                                              else
1874   4                                              DisplayState = ST_MENU;
1875   4                                              
1876   4                                  break;                      
1877   4                          }
1878   3      
1879   3                      if( flash_flag && !long_input_flag )  //闪烁功能
1880   3                      {       
1881   4                          LEDClearChar(DisplayBitNum,1);
1882   4                      }
1883   3                      else                    
1884   3                      {
1885   4                                              LEDShowCaption(DisplayItemNum);
1886   4                                      TempValue=DataToStr(&TempInputData,
1887   4                                                      INT32_SIZE,
1888   4                                                                      5,
1889   4                                                                      0,
1890   4                                                                      DisplayBuff,0,TY_D );   
1891   4      
1892   4                                      PasswordBuff[2]=DisplayBuff[TempValue];
1893   4                                      if(PasswordBuff[2] == ' ') PasswordBuff[2] = '0';
1894   4                                      PasswordBuff[3]=DisplayBuff[TempValue+1];
1895   4                                      if(PasswordBuff[3] == ' ') PasswordBuff[3] = '0';
1896   4                                      PasswordBuff[4]=DisplayBuff[TempValue+2];                                               
1897   4                                      LED_ShowNumber(&PasswordBuff[2],2);     
1898   4                                      
1899   4                      }
1900   3                  }   
1901   2                  break;      
1902   2                      
1903   2                      case ST_DISP_ERR:
1904   2                      {
1905   3                              if(public_val.ms_timer - now_menu.err_dsip_delay > DISP_ERR_TIMER )
1906   3                              {
1907   4                                      DisplayState = now_menu.chang_next_step;
1908   4                              }
1909   3                              else
1910   3                              {
1911   4                                      LEDShowFlashString("  Err",0);
1912   4                              }
1913   3                      }
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 32  

1914   2                      break;
1915   2                      
1916   2                      default :
1917   2                      DisplayState = ST_MAIN;
1918   2                              //DIS_OPTIONING=0;
1919   2                  break;                              
1920   2                      
1921   2              }
1922   1      
1923   1      
1924   1              if(!UpdateState)
1925   1              {
1926   2                      UpdateState = 1;
1927   2                      UpdateCountB = public_val.ms_timer;
1928   2              }
1929   1              else
1930   1              {
1931   2                      if(public_val.ms_timer - UpdateCountB > 100)
1932   2                      {
1933   3                              flash_flag = !flash_flag;
1934   3                              UpdateState = 0;
1935   3                      }               
1936   2              }
1937   1      
1938   1      
1939   1              switch(war_bell_step)  /* 蜂鸣器报警处理 */
1940   1              {
1941   2                      case 1:
1942   2                              war_bell_delay = public_val.ms_timer;
1943   2                              Bell_flag |= 0x02;
1944   2                              war_bell_step = 10;
1945   2                      break;
1946   2                      case 10:
1947   2                              iBellOnTime = (cPauseBell == 0) ? 500 : 50;
1948   2                              //iBellOnTime = (cPauseBell == 0) ? 2000 : 50;
1949   2                              if(public_val.ms_timer - war_bell_delay > iBellOnTime) //响的时间
1950   2                                      {
1951   3                                              war_bell_delay = public_val.ms_timer;
1952   3                                              Bell_flag &= 0xfd;
1953   3                                              war_bell_step = 20;
1954   3                                      }
1955   2                      break;
1956   2                      case 20:
1957   2                              iBellOffTime = (cPauseBell == 0) ? 2000 : 2000;                 
1958   2                              //iBellOffTime = (cPauseBell == 0) ? 200 : 2000;                        
1959   2                              if(public_val.ms_timer - war_bell_delay > iBellOffTime) //不响的时间
1960   2                                      {
1961   3                                              war_bell_delay = public_val.ms_timer;
1962   3                                              war_bell_step = 30;
1963   3                                      }                       
1964   2                      break;
1965   2                      case 30:
1966   2                              if((!public_val.Err_Flag) 
1967   2                                 && (!(public_val.Work_Pause_Flag & 0x80))
1968   2                                 && (!public_val.Bell_Flag))  /* added for v19416 */
1969   2                                      {
1970   3                                              war_bell_step = 0;   /* 无报错 */
1971   3                                      }
1972   2                              else
1973   2                                      {
1974   3                                              war_bell_step = 1;
1975   3                                      }
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 33  

1976   2                      break;
1977   2              }
1978   1              
1979   1              if(Bell_flag)
1980   1              {
1981   2                      BELL = 1;
1982   2              }
1983   1              else
1984   1              {
1985   2                      BELL = 0;
1986   2              }
1987   1              
1988   1      
1989   1              TM1637_Write();
1990   1      
1991   1              
1992   1      }
1993                          
1994          
1995          /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1996          功能：整形变字符型
1997          
1998          参数：nBit:整数位个数，nPoint:小数位个数  ,nFlag==1整数位前的0以空格补充
1999          
2000          返回值：高位空格数
2001          ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/
2002          static char DataToStr(void * const pData,char size,char nBit,char nPoint,char *string,char nFlag,char nTyp
             -e)
2003          {       
2004   1              long DataS32Bit;
2005   1              char spaces;
2006   1              char Temp,module;
2007   1              char SignZero;//负数标志位,  >0: 0,  <0: 1
2008   1              
2009   1              if(size==0 || size>4)//判断size的合理性
2010   1                  return 0;
2011   1              size--;
2012   1      //      if( ( *((char *)(pData)+size) ) & 0x80 )//判断最高位是否为1
2013   1      //          SignZero=1;
2014   1      //      else
2015   1                  SignZero=0; 
2016   1                  
2017   1          DataS32Bit=0;
2018   1              if(size==3)//LONG型数据
2019   1              {                           
2020   2                      if(SignZero)
2021   2                          *((long *)&DataS32Bit) = 0 - *((long *)pData);
2022   2                      else
2023   2                          *((long *)&DataS32Bit) = *((long *)pData);
2024   2              }       
2025   1              else if(size==1)//INT型数据
2026   1              {
2027   2                  if(SignZero)
2028   2                          *((int *)&DataS32Bit) = 0 - *((int *)pData);                                                
2029   2                      else
2030   2                          *((int *)&DataS32Bit) = *((int *)pData);    
2031   2              }       
2032   1              else if(size==0)//char型数据
2033   1              {
2034   2                  if(SignZero)
2035   2                          *((char *)&DataS32Bit) = 0 - *((char *)pData);
2036   2                      else
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 34  

2037   2                          *((char *)&DataS32Bit) = *((char *)pData);
2038   2              }
2039   1              else
2040   1                      return 0;       
2041   1              
2042   1              switch(nType){
2043   2              case TY_B:
2044   2                      module=2;
2045   2                      break;
2046   2              case TY_D:
2047   2              case TY_RD:
2048   2              case TY_D_A:
2049   2              case TY_D_L:
2050   2              module=10;
2051   2                      break;
2052   2              case TY_H:
2053   2              module=16;
2054   2                      break;
2055   2              }
2056   1              
2057   1          spaces = 3-(nPoint+nBit);
2058   1              Temp = nPoint+nBit;
2059   1              if(Temp<3)
2060   1              {
2061   2                  nBit += (3-Temp);
2062   2                      Temp=3;
2063   2              }
2064   1                      
2065   1              do
2066   1          {
2067   2              if(Temp!=nBit || nFlag)
2068   2              {
2069   3                  string[Temp]='0'+(char)(DataS32Bit%(module));
2070   3                  DataS32Bit/=module;
2071   3              }
2072   2              else 
2073   2                      {
2074   3                              if(nPoint!=0)
2075   3                                  string[Temp]='.';
2076   3                              else
2077   3                                  string[Temp]=' ';
2078   3                      }
2079   2              
2080   2          }while( Temp-- >0 );
2081   1              
2082   1              if(nFlag)//nFlag==1整数位前的0以空格补充
2083   1              {
2084   2                  if(SignZero && spaces<3)
2085   2                          string[spaces]='-';
2086   2                      return 0;
2087   2          }
2088   1              
2089   1              Temp=0;
2090   1              spaces=0;
2091   1          do
2092   1          {
2093   2             if(string[Temp]=='0' && (Temp+1<nBit)) 
2094   2             {
2095   3                         string[Temp]=' ';
2096   3                         spaces++;
2097   3                 }
2098   2             else
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 35  

2099   2                 {
2100   3                 break;
2101   3                 }
2102   2             Temp++;
2103   2          }while(1);
2104   1              if(SignZero)
2105   1              {
2106   2                  string[--spaces]='-';
2107   2              }
2108   1              Temp=nPoint+nBit-spaces;
2109   1              if(Temp<3)
2110   1                  spaces -= (3-Temp);
2111   1              return spaces;
2112   1      }
2113          
2114          /*++++++++++++++++++++++++++++++++++++++++++++++++++++
2115          功能：需要一个函数将字符化整形
2116          
2117          参数：len 为字符长度
2118          
2119          返回值：无
2120          ++++++++++++++++++++++++++++++++++++++++++++++++++++*/
2121          static long StrToData(char *string,char len,char nType)
2122          {       
2123   1          unsigned long x,bi;     
2124   1          char i,module;
2125   1      
2126   1          switch(nType){
2127   2              case TY_B:
2128   2                      module=2;
2129   2                      break;
2130   2              case TY_D:
2131   2              module=10;
2132   2                      break;
2133   2              case TY_H:
2134   2              module=16;
2135   2                      break;
2136   2              }
2137   1              x=0;
2138   1              bi=1;
2139   1              for(i=len;i>0;)
2140   1          {
2141   2              i--;
2142   2                      if(string[i] >= '0' && string[i]<=0x3F)
2143   2                      {
2144   3                         x+=(string[i] - '0')*bi;
2145   3                         bi*=module;
2146   3              }
2147   2              }
2148   1              if(string[0]=='-' || string[1]=='-' || string[2]=='-' )//负数
2149   1                  return (0-x);
2150   1              else
2151   1                  return x;
2152   1      
2153   1      }
2154          
2155          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   9891    ----
   CONSTANT SIZE    =    614    ----
C51 COMPILER V9.00   LED_DISPLAY                                                           04/09/2016 11:08:15 PAGE 36  

   XDATA SIZE       =   1043    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      77
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
