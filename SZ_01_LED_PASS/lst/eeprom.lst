C51 COMPILER V9.00   EEPROM                                                                04/09/2016 11:07:34 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\out\eeprom.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil\C51\BIN\C51.EXE eeprom.c BROWSE DEBUG OBJECTEXTEND PRINT(.\lst\eeprom.l
                    -st) OBJECT(.\out\eeprom.obj)

line level    source

   1          /*#include <reg51.h>
   2          
   3          #include <intrins.h>
   4          
   5          #define uint unsigned int
   6          #define uchar unsigned char
   7          sfr IAP_DATA   = 0xC2;         //IAPÊý¾Ý¼Ä´æÆ÷
   8          sfr IAP_ADDRH  = 0xC3;             //IAPµØÖ·¼Ä´æÆ÷¸ßÎ»
   9          sfr IAP_ADDRL  = 0xC4;             //IAPµØÖ·¼Ä´æÆ÷µÍÎ»
  10          sfr IAP_CMD    = 0xC5;             //IAPÃüÁî¼Ä´æÆ÷
  11          sfr IAP_TRIG   = 0xC6;             //IAPÃüÁî´¥·¢¼Ä´æÆ÷
  12          sfr IAP_CONTR  = 0xC7;             //IAP¿ØÖÆ¼Ä´æÆ÷                                
  13          
  14          #define CMD_IDLE  0     // ¿ÕÏÐÄ£Ê½
  15          #define CMD_READ  1     // IAP×Ö½Ú¶ÁÃüÁî
  16          #define CMD_PROGRAM  2     //IAP×Ö½Ú±à³ÌÃüÁî
  17          #define CMD_ERASE  3     //     IAPÉÈÇø²Á³ýÃüÁî
  18          #define ENABLE_IAP   0X82          */
  19          #include"eeprom.h"
  20          #include"led_display.h"
  21          extern xdata public_stru public_val;
  22          extern char eeprom_en;
  23          #define EEPROM_EN_WRITE
  24          /**************¹Ø±ÕIAP********************
  25          **************************************/
  26          void iapidle()
  27          {
  28   1              IAP_CONTR  =0;
  29   1              IAP_CMD    =0;
  30   1              IAP_TRIG   =0;
  31   1              IAP_ADDRH  =0X80;
  32   1              IAP_ADDRL  =0;
  33   1      }
  34          
  35          /*****************¶ÁIAPº¯Êý**************************
  36          ***********************************************/
  37          uchar  IapReadByte (uint addr)
  38          {
  39   1              uchar dat;
  40   1              EA = 0;
  41   1              IAP_CONTR =ENABLE_IAP;
  42   1              IAP_CMD   = CMD_READ;
  43   1              IAP_ADDRL = addr;
  44   1              IAP_ADDRH = addr >> 8;
  45   1              IAP_TRIG  =0x5a;
  46   1              IAP_TRIG  =0xa5;
  47   1              _nop_();
  48   1              _nop_();
  49   1              dat = IAP_DATA;
  50   1              iapidle();
  51   1              EA = 1;
  52   1              return dat;
  53   1      }
  54          
C51 COMPILER V9.00   EEPROM                                                                04/09/2016 11:07:34 PAGE 2   

  55          /*****************Ð´IAPº¯Êý**************************
  56          ÓÐÐ§EEPROMµØÖ·´Ó0xf000-0xf3ff
  57          ***********************************************/
  58          void  IapProgramByte (uint addr,uchar dat)
  59          {
  60   1      #ifdef EEPROM_EN_WRITE
  61   1              if( (eeprom_en & 0xff) == 0xaa)
  62   1                      {
  63   2                              EA = 0;
  64   2                              if( (eeprom_en & 0xff) == 0xaa)
  65   2                                      IAP_CONTR = ENABLE_IAP;
  66   2                              if( (eeprom_en & 0xff) == 0xaa)
  67   2                                      IAP_CMD   = CMD_PROGRAM;
  68   2                              if( (eeprom_en & 0xff) == 0xaa)
  69   2                                      IAP_ADDRL = addr;
  70   2                              if( (eeprom_en & 0xff) == 0xaa)
  71   2                                      IAP_ADDRH = addr >> 8;
  72   2                              if( (eeprom_en & 0xff) == 0xaa)
  73   2                                      IAP_DATA  = dat;
  74   2                              if( (eeprom_en & 0xff) == 0xaa)
  75   2                                      IAP_TRIG  =0x5a;
  76   2                              if( (eeprom_en & 0xff) == 0xaa)
  77   2                                      IAP_TRIG  =0xa5;
  78   2                              _nop_();        
  79   2                              iapidle();
  80   2                              EA = 1;
  81   2                      }
  82   1      #endif  
  83   1      }
  84          
  85          /*****************IAPÒ³²Á³ýº¯Êý**************************
  86          ÓÐÐ§EEPROMµØÖ·´Ó0x0000-0xf3ff
  87          ***********************************************/
  88          void IapEraseSector(uint addr)
  89          {
  90   1      #ifdef EEPROM_EN_WRITE
  91   1              if( (eeprom_en & 0xff) == 0xaa)
  92   1                      {
  93   2                              EA = 0;
  94   2                              if( (eeprom_en & 0xff) == 0xaa)
  95   2                                      IAP_CONTR =ENABLE_IAP;
  96   2                              if( (eeprom_en & 0xff) == 0xaa)
  97   2                                      IAP_CMD   = CMD_ERASE;
  98   2                              if( (eeprom_en & 0xff) == 0xaa)
  99   2                                      IAP_ADDRL = addr;
 100   2                              if( (eeprom_en & 0xff) == 0xaa)
 101   2                                      IAP_ADDRH = addr >> 8;
 102   2                              if( (eeprom_en & 0xff) == 0xaa)
 103   2                                      IAP_TRIG  =0x5a;
 104   2                              if( (eeprom_en & 0xff) == 0xaa)
 105   2                                      IAP_TRIG  =0xa5;
 106   2                              _nop_();        
 107   2                              iapidle();
 108   2                              EA = 1;
 109   2                      }
 110   1      #endif  
 111   1      }
 112          
 113          
 114          


C51 COMPILER V9.00   EEPROM                                                                04/09/2016 11:07:34 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
